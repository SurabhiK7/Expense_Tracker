{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Downloads\\\\E_T\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5077/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${URL}add-income`, income);\n      getIncomes();\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.message) {\n          setError(error.response.data.message);\n        } else if (error.response.data) {\n          setError(error.response.data);\n        } else {\n          setError(error.response.statusText || \"An unknown error occurred.\");\n        }\n      } else if (error.request) {\n        setError(\"No response received from the server.\");\n      } else {\n        setError(\"Error setting up the request: \" + error.message);\n      }\n    }\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  //Expense\n  const addExpense = async income => {\n    try {\n      const response = await axios.post(`${URL}add-expense`, income);\n      getExpense();\n    } catch (error) {\n      if (error.response) {\n        if (error.response.data && error.response.data.message) {\n          setError(error.response.data.message);\n        } else if (error.response.data) {\n          setError(error.response.data);\n        } else {\n          setError(error.response.statusText || \"An unknown error occurred.\");\n        }\n      } else if (error.request) {\n        setError(\"No response received from the server.\");\n      } else {\n        setError(\"Error setting up the request: \" + error.message);\n      }\n    }\n  };\n  const getExpense = async () => {\n    const response = await axios.get(`${URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${URL}delete-expense/${id}`);\n    getExpense();\n  };\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(income => {\n      totalExpenses = totalExpenses + income.amount;\n    });\n    return totalExpenses;\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      totalIncome,\n      expenses,\n      addExpense,\n      getExpense,\n      deleteExpense,\n      totalExpenses,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"sRm99PiA1mhV3u/JW/QBjyFd/HU=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","URL","GlobalContext","createContext","GlobalProvider","children","_s","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","getIncomes","data","message","statusText","request","get","console","log","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","getExpense","deleteExpense","totalExpenses","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/Asus/Downloads/E_T/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nconst URL=\"http://localhost:5077/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider=({children})=>{\r\n\r\nconst [incomes,setIncomes]=useState([])\r\nconst [expenses,setExpenses]=useState([])\r\nconst [error,setError]=useState(null)\r\n\r\nconst addIncome = async(income)=>{ \r\n    try {\r\n        const response = await axios.post(`${URL}add-income`, income);\r\n        getIncomes();\r\n    } catch (error) {\r\n        if (error.response) {\r\n            if (error.response.data && error.response.data.message) {\r\n                setError(error.response.data.message);\r\n            } else if (error.response.data) {\r\n                setError(error.response.data);\r\n            } else {\r\n                setError(error.response.statusText || \"An unknown error occurred.\");\r\n            }\r\n        } else if (error.request) {\r\n            setError(\"No response received from the server.\");\r\n        } else {\r\n            setError(\"Error setting up the request: \" + error.message);\r\n        }\r\n    }\r\n};\r\n\r\nconst getIncomes = async () => {\r\n    const response = await axios.get(`${URL}get-incomes`)\r\n    setIncomes(response.data)\r\n    console.log(response.data)\r\n}\r\nconst deleteIncome = async (id) => {\r\n    const res  = await axios.delete(`${URL}delete-income/${id}`)\r\n    getIncomes()\r\n}\r\nconst totalIncome = () => {\r\n    let totalIncome = 0;\r\n    incomes.forEach((income) =>{\r\n        totalIncome = totalIncome + income.amount\r\n    })\r\n\r\n    return totalIncome;\r\n}\r\n//Expense\r\nconst addExpense = async(income)=>{ \r\n    try {\r\n        const response = await axios.post(`${URL}add-expense`, income);\r\n        getExpense();\r\n    } catch (error) {\r\n        if (error.response) {\r\n            if (error.response.data && error.response.data.message) {\r\n                setError(error.response.data.message);\r\n            } else if (error.response.data) {\r\n                setError(error.response.data);\r\n            } else {\r\n                setError(error.response.statusText || \"An unknown error occurred.\");\r\n            }\r\n        } else if (error.request) {\r\n            setError(\"No response received from the server.\");\r\n        } else {\r\n            setError(\"Error setting up the request: \" + error.message);\r\n        }\r\n    }\r\n};\r\n\r\nconst getExpense = async () => {\r\n    const response = await axios.get(`${URL}get-expenses`)\r\n    setExpenses(response.data)\r\n    console.log(response.data)\r\n}\r\nconst deleteExpense = async (id) => {\r\n    const res  = await axios.delete(`${URL}delete-expense/${id}`)\r\n    getExpense()\r\n}\r\nconst totalExpenses = () => {\r\n    let totalExpenses = 0;\r\n    expenses.forEach((income) =>{\r\n        totalExpenses = totalExpenses + income.amount\r\n    })\r\n\r\n    return totalExpenses;\r\n}\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            totalIncome,\r\n            expenses,\r\n            addExpense,\r\n            getExpense,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport const useGlobalContext=()=>{\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}